{"version":3,"sources":["components/AddButton.js","components/AddMember.js","components/Table.js","components/DataDump.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["AddButton","_ref","toggleModal","react_default","a","createElement","style","display","justifyContent","onClick","className","AddMember","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","change","event","setState","defineProperty","target","name","value","onEmployeeChange","employee","state","onSubmit","length","newMember","job","age","nick","addNewRow","errorMsg","setTimeout","bind","assertThisInitialized","_this2","id","htmlFor","type","onChange","React","Component","Table","removeRow","data","map","row","i","key","disabled","defaultChecked","DataDump","onNewData","JSON","stringify","Chart","color","points","bundle_default","width","height","xLabel","yLabel","App","route","isActive","isChartActive","fields","details","push","splice","createCoordinates","onlyNumbers","el","parseInt","filter","Number","isNaN","z","x","y","persons","Modal","setAppElement","components_AddButton","src_components_Table","lib_default","assign","isOpen","onRequestClose","components_AddMember","Chart_Chart","components_DataDump","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.050ba945.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AddButton = ({ toggleModal }) => {\r\n\t\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent:'flex-start'}} >\r\n\t\t\t\t<p onClick={() => toggleModal('Form')} className='f3 link dim black underline pa3 pointer'>Add</p>\r\n\t\t\t\t<p onClick={() => toggleModal('Chart')} className='f3 link dim black underline pa3 pointer'>Line Chart</p>\r\n\t\t\t</nav>\r\n\t\t\t);\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\n\r\nclass AddMember extends React.Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tjob: '',\r\n\t\t\tage: '',\r\n\t\t\tnick: '',\r\n\t\t\temployee: false,\r\n\t\t\terrorMsg: false,\r\n\t\t}\r\n\t}\r\n\r\n\tchange = event => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value });\r\n\t};\r\n\r\n\tonEmployeeChange = (event) => {\r\n\t\tthis.setState({employee: !this.state.employee})\r\n\t}\r\n\r\n\tonSubmit = () => {\r\n\t\tif(this.state.name.length >= 2) {\r\n\t\t\tconst newMember = {\r\n\t\t\tname: this.state.name, job: this.state.job, age: this.state.age, nick: this.state.nick, employee: this.state.employee};\r\n\t\t\tthis.props.addNewRow(newMember);\r\n\t\t\tthis.props.toggleModal('Form');\r\n\t\t} else {\r\n\t\t\tthis.setState({errorMsg: true}); \r\n\t\t\tsetTimeout(function(){this.setState({errorMsg: false});}.bind(this), 3000);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article >\t\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"add_new\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t    {this.state.errorMsg ? <p className =\"tc red\">You have to specify a name.</p> : null}\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input \r\n\t\t\t        \tclassName=\"b pa2 input-reset ba hover-bg-light-gray hover-black w-100\" \r\n\t\t\t        \ttype=\"text\" \r\n\t\t\t        \tname=\"name\"  \r\n\t\t\t        \tid=\"name\"\r\n\t\t\t        \tonChange={event => this.change(event)}\r\n\t\t\t        \t/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"job\">Job title</label>\r\n\t\t\t        <input \r\n\t\t\t        \tclassName=\"b pa2 input-reset ba hover-bg-light-gray hover-black w-100\" \r\n\t\t\t        \ttype=\"text\" \r\n\t\t\t        \tname=\"job\"  \r\n\t\t\t        \tid=\"job\"\r\n\t\t\t        \tonChange={event => this.change(event)} \r\n\t\t\t        \t/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"age\">Age</label>\r\n\t\t\t        <input \r\n\t\t\t        \tclassName=\"b pa2 input-reset ba hover-bg-light-gray hover-black w-100\" \r\n\t\t\t        \ttype=\"number\" \r\n\t\t\t        \tname=\"age\"  \r\n\t\t\t        \tid=\"age\"\r\n\t\t\t        \tonChange={event => this.change(event)} \r\n\t\t\t        \t/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"nick\">Nickname</label>\r\n\t\t\t        <input \r\n\t\t\t        \tclassName=\"b pa2 input-reset ba hover-bg-light-gray hover-black w-100\" \r\n\t\t\t        \ttype=\"text\" \r\n\t\t\t        \tname=\"nick\"  \r\n\t\t\t        \tid=\"nick\"\r\n\t\t\t        \tonChange={event => this.change(event)} \r\n\t\t\t        \t/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"b mr1 fw6 lh-copy f6\">Employee</label>\r\n\t\t\t        <input\r\n\t\t\t        \ttype=\"checkbox\" \r\n\t\t\t        \tonClick={this.onEmployeeChange} \r\n\t\t\t        \t/>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t    <div className=\"\">\r\n\t\t      \t<nav style={{display: 'flex', justifyContent:'center'}} >\r\n\t\t\t\t\t<p onClick={() => this.onSubmit()} className='f3 link dim black underline pa3 pointer'>Ok</p>\r\n\t\t\t\t\t<p onClick={() => this.props.toggleModal('Form')} className='f3 link dim black underline pa3 pointer'>Cancel</p>\r\n\t\t\t\t</nav>\r\n\t\t    </div>\r\n\t\t  </div>\r\n\t\t</main>\r\n\t\t</article>\t\t\r\n\t\t);\r\n\t}\r\n}\r\nexport default AddMember;","import React from 'react';\r\nimport './Table.css';\r\n\r\nclass Table extends React.Component {\r\n\r\nrender() {\r\nconst { removeRow } = this.props;\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Age</th>\r\n          <th>Nickname</th>\r\n          <th>Employee</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          this.props.data.map((row, i) => (\r\n            <tr key={i}>\r\n              <td>\r\n                {row.name} <br/>\r\n                {row.job}\r\n              </td>\r\n              <td>{row.age}</td>\r\n              <td>{row.nick}</td>\r\n              <td>\r\n                <input type=\"checkbox\" disabled defaultChecked={row.employee} />\r\n              </td>\r\n              <td onClick={() => removeRow(i, 'Deleted: ' + row.name)} className=\"link dim blue db pointer\">\r\n                Delete\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n  }\r\n}\r\nexport default Table;","import React from 'react';\r\n\r\nconst DataDump = ({ onNewData }) => {\r\n\treturn (\r\n\t\t<article className=\"b--transparent mv4 w-100 w-50-m w-25-l mw6 center\">\r\n\t\t<fieldset id=\"data_dump\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t<legend className=\"f4 fw6 tl ph0 mh0\">Data dump:</legend>\r\n\t\t\t<div className=\"br3 ba b--black-10  mw6 shadow-2 center\">\r\n\t\t\t{onNewData ? \r\n\t\t\t<p className=\"\">{JSON.stringify(onNewData, null, 2)}</p>\r\n\t\t\t: null}\r\n\t\t\t</div>\r\n\t\t</fieldset>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default DataDump;","import React, { Component } from 'react';\r\nimport LineChart from 'react-linechart';\r\nimport '../../node_modules/react-linechart/dist/styles.css';\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    const data = [\r\n      {                 \r\n        color: \"steelblue\", \r\n        points: this.props.data \r\n      }\r\n    ];\r\n    return (\r\n        <div className=\"tc\">\r\n          <LineChart\r\n            width={450}\r\n            height={280}\r\n            data={data}\r\n            xLabel={'Place'}\r\n            yLabel={'Age'}\r\n          />\r\n          <p className=\"tc pb2\">Click somewhere out of the modal to close.</p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// import React, {Component} from \"react\";\r\n// import './LineChart.css';\r\n\r\n// class LineChart extends Component {\r\n\r\n//   getMinX() {\r\n//     const { data } = this.props\r\n//     const only_x = data.map(obj => obj.x)\r\n//     const min_x = Math.min.apply(null, only_x)\r\n//     return min_x\r\n//   }\r\n//   getMinY() {\r\n//     const { data } = this.props\r\n//     const only_y = data.map(obj => obj.y)\r\n//     const min_y = Math.min.apply(null, only_y)\r\n//     return min_y\r\n//   }\r\n//   getMaxX() {\r\n//     const { data } = this.props\r\n//     const only_x = data.map(obj => obj.x)\r\n//     const max_x = Math.max.apply(null, only_x)\r\n//     return max_x\r\n//   }\r\n//   getMaxY() {\r\n//     const { data } = this.props\r\n//     const only_y = data.map(obj => obj.y)\r\n//     const max_y = Math.max.apply(null, only_y)\r\n//     return max_y\r\n//   }\r\n//   getSvgX(x) {\r\n//     const { svgWidth } = this.props\r\n//     return (x / this.getMaxX()) * svgWidth\r\n//   }\r\n//   getSvgY(y) {\r\n//     const { svgHeight } = this.props\r\n//     return svgHeight - (y / this.getMaxY()) * svgHeight\r\n//   }\r\n\r\n//   makePath() {\r\n//     const { data, color } = this.props\r\n//     let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\r\n// pathD += data.map((point, i) => {\r\n//       return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\r\n//     });\r\n\r\n//     return (\r\n//       <path className=\"linechart_path\" d={pathD} style={{ stroke: color }} />\r\n//     )\r\n//   }\r\n//   makeAxis() {\r\n//     const minX = this.getMinX()\r\n//     const maxX = this.getMaxX()\r\n//     const minY = this.getMinY()\r\n//     const maxY = this.getMaxY()\r\n//     return (\r\n//       <g className=\"linechart_axis\">\r\n//         <line\r\n//           x1={this.getSvgX(minX)}\r\n//           y1={this.getSvgY(minY)}\r\n//           x2={this.getSvgX(maxX)}\r\n//           y2={this.getSvgY(minY)}\r\n//         />\r\n//         <line\r\n//           x1={this.getSvgX(minX)}\r\n//           y1={this.getSvgY(minY)}\r\n//           x2={this.getSvgX(minX)}\r\n//           y2={this.getSvgY(maxY)}\r\n//         />\r\n//       </g>\r\n//     )\r\n//   }\r\n\r\n\r\n//   render() {\r\n//     const { svgHeight, svgWidth } = this.props\r\n\r\n//     return (\r\n//       <div className=\"tc\">\r\n//       <h3 className=\"pt2\">A line chart that represents the age of the members.</h3>\r\n//       <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`}>\r\n//         {this.makePath()}\r\n//         {this.makeAxis()}\r\n//       </svg>\r\n//       <p className=\"pb2\">Click somewhere out of the modal to close.</p>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n// LineChart.defaultProps = {\r\n//   data: [],\r\n//   color: '#2196F3',\r\n//   svgHeight: 300,\r\n//   svgWidth: 600,\r\n// }\r\n// export default LineChart\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport AddButton from './components/AddButton';\nimport AddMember from './components/AddMember';\nimport Table from './components/Table';\nimport DataDump from './components/DataDump';\nimport persons from './components/persons.json';\nimport Modal from 'react-modal';\nimport Chart from './components/Chart';\n\nclass App extends Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    details: persons,\n    isActive: false,\n    isChartActive: false,\n    fields: {}\n  }\n}\n\ncomponentWillMount() {\n  Modal.setAppElement('body');\n}\n\ntoggleModal = (route) => {\n  if(route === 'Form') {\n    this.setState({isActive: !this.state.isActive})\n  } else if (route === 'Chart') {\n    this.setState({isChartActive: !this.state.isChartActive})\n  }\n}\n\naddNewRow = (data) => {\n  this.setState({fields: data});\n  this.state.details.push(data);\n  this.setState({details: this.state.details});\n}\n\n\nremoveRow = (i, name) => {\n  this.setState({fields: name});\n  this.state.details.splice( i, 1 );  \n  this.setState( {details: this.state.details} );\n}\n\ncreateCoordinates = () => {\n    const rawdata = this.state.details.map(function(el) {\n      return parseInt(el.age);\n    });\n    \n    const onlyNumbers =  rawdata.filter( value => \n      !Number.isNaN(value) \n    );\n    \n    const z = []\n      for(let i = 1; i <= onlyNumbers.length; i++) {\n        z.push(i)\n    }\n\n    const data = []\n      for(let i = 0; i < onlyNumbers.length; i++) {\n      const x = z[i]\n      const y = onlyNumbers[i]\n      data.push({x, y})\n    }\n    return data;\n}\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      \t<div className=\"row\">\n        \t<div className=\"col-sm-12\">\n        \t\t<AddButton toggleModal={this.toggleModal}/>\n        \t\t<Table data={this.state.details} removeRow={this.removeRow}/>\n            <Modal {...this.props} isOpen={this.state.isActive} onRequestClose={() => this.toggleModal('Form')}\n            className=\"Modal br3 bg-white b--black-10 mt2 w-100 w-50-m mw6 shadow-2 center\">\n              <AddMember toggleModal={this.toggleModal} addNewRow={this.addNewRow} />\n            </Modal>\n            <Modal {...this.props} isOpen={this.state.isChartActive} onRequestClose={() => this.toggleModal('Chart')}\n              className=\"Modal br3 bg-white b--black-10 mt2  w-100 w-75-m mw6 shadow-2 center\">\n              {this.state.details.length >= 2 ?\n              <Chart data={this.createCoordinates()} />\n              : <h3 className=\"tc red pt2 pb2\"> There must be at least 2 members in the table with age defined.</h3>\n              }\n            </Modal>\n            <DataDump onNewData={this.state.fields} />\n        \t</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}